name: Generate Fancode M3U from JSON

on:
  schedule:
    - cron: '*/10 * * * *' # Har 20 minute baad run karega
  push:
    branches:
      - main # Jab main branch par push hoga tab run karega
    paths:
      - 'icc.json' # Khaas taur par jab fancode.json update ho tab trigger karega

jobs:
  generate_playlist_from_json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }} # Same repository mein push karne ke liye

    - name: Remove existing files
      run: rm -f icc.m3u

    - name: Configure Git for commits
      run: |
        git config --global user.name "auto-update-bot"
        git config --global user.email "auto-update-bot@users.noreply.github.com"
        git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/abid58b/FanCodePlaylist.git

    - name: Ensure jq is installed
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Check for fancode.json existence
      id: check_json_file
      run: |
        if [ ! -f fancode.json ]; then
          echo "fancode.json not found! Skipping M3U generation."
          echo "file_found=false" >> $GITHUB_OUTPUT
        else
          echo "fancode.json found. Proceeding with M3U generation."
          echo "file_found=true" >> $GITHUB_OUTPUT
        fi

    - name: Generate M3U from JSON and Modify URLs
      if: steps.check_json_file.outputs.file_found == 'true'
      run: |
        # 1. M3U file ka header shuru karna
        echo "#EXTM3U" > icc.m3u
        
        # 2. JQ ki madad se har Live Event ko M3U format mein convert karna
        # Note: Hum sirf 'live_events' ko process kar rahe hain.
        
        JQ_QUERY='
        .live_events[] |
        # Filter: Sirf wo events jo streamable hon (stream_data_url aur drm_key ho)
        select(.stream_data_url != "" and .drm_key != "") |
        
        # M3U lines ka structure taiyar karna:
        (
            "#KODIPROP:inputstream.adaptive.license_type=clearkey",
            "#KODIPROP:inputstream.adaptive.license_key=" + (.drm_key // ""),
            "#EXTINF:-1 tvg-id=\"ts246\" tvg-logo=\"" + (.image_url // "no_logo") + "\"," + (.title // "Untitled Event"),
            .stream_data_url
        )
        '
        
        # Run JQ: icc.json se data extract karo aur newline se separate karo
        # Phir playlist.m3u file mein append karo
        cat icc.json | jq -r "$JQ_QUERY" >> icc.m3u
        
        echo "M3U generation completed. Output written to icc.m3u"

      
    - name: Commit and push generated M3U file
      if: steps.check_json_file.outputs.file_found == 'true'
      run: |
        git add icc.m3u

        if git diff --cached --quiet; then
          echo "No changes to fancode-new.m3u to commit."
        else
          git fetch origin main
          git reset --soft origin/main
          git commit -m "Auto-generated: Fancode M3U playlist from JSON data"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
