name: Generate ICC M3U from JSON

on:
  schedule:
    - cron: '*/10 * * * *'
  push:
    branches:
      - main
    paths:
      - 'icc.json'

jobs:
  generate_playlist_from_json:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Remove existing files
      run: rm -f icc.m3u

    - name: Configure Git for commits
      run: |
        git config --global user.name "auto-update-bot"
        git config --global user.email "auto-update-bot@users.noreply.github.com"
        git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/abid58b/ICCPlaylist.git

    - name: Ensure jq is installed
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Check for icc.json existence
      id: check_json_file
      run: |
        if [ ! -f icc.json ]; then 
          echo "icc.json not found! Skipping M3U generation."
          echo "file_found=false" >> $GITHUB_OUTPUT
        else
          echo "icc.json found. Proceeding with M3U generation."
          echo "file_found=true" >> $GITHUB_OUTPUT
        fi

    - name: Generate M3U from JSON and Modify URLs
      if: steps.check_json_file.outputs.file_found == 'true'
      run: |
        echo "#EXTM3U" > icc.m3u
        
        JQ_QUERY='
        .live_events[] |
        select(.stream_data_url != "" and .drm_key != "") |
        
        # M3U lines ka structure taiyar karna:
        (
            "#KODIPROP:inputstream.adaptive.license_type=clearkey",
            "#KODIPROP:inputstream.adaptive.license_key=" + (.drm_key // ""),
            "#EXTINF:-1 tvg-id=\"ts246\" tvg-logo=\"" + (.image_url // "no_logo") + "\" group-title=\"Cricket\"," + (.title // "Untitled Event"),
            .stream_data_url
            
        )
        '
        
        m3u_content=$(cat icc.json | jq -r "$JQ_QUERY")
        printf '%s\n' "$m3u_content" >> icc.m3u
        echo "M3U generation completed. Output written to icc.m3u"
      
    - name: Commit and push generated M3U file
      if: steps.check_json_file.outputs.file_found == 'true'
      run: |
        git add icc.m3u

        if git diff --cached --quiet; then
          echo "No changes to icc.m3u to commit."
        else
          git fetch origin main
          git reset --soft origin/main
          git commit -m "Auto-generated: ICC M3U playlist from JSON data"
          git push --force
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
